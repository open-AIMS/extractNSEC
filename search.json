[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rebecca Fisher. Author, maintainer. Diego Barneche. Author. Darren Koppel. Author. David Fox. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fisher R, Barneche D, Koppel D, Fox D (2023). extractNSEC: Functions Extracting NSEC Values Fitted Frequentist Bayesian Model Objects. R package version 1.0.0, https://open-aims.github.io/extractNSEC/.","code":"@Manual{,   title = {extractNSEC: Functions for Extracting NSEC Values from Fitted Frequentist and Bayesian Model Objects},   author = {Rebecca Fisher and Diego Barneche and Darren Koppel and David Fox},   year = {2023},   note = {R package version 1.0.0},   url = {https://open-aims.github.io/extractNSEC/}, }"},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Functions for Extracting NSEC Values from Fitted Frequentist and Bayesian Model Objects","text":"extractNSEC package extracts NSEC estimate supported fitted frequentest (drc) Bayesian (bayesnec) model objects. details see Fisher & Fox (2023).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions for Extracting NSEC Values from Fitted Frequentist and Bayesian Model Objects","text":"current development version can downloaded GitHub via","code":"if (!requireNamespace(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"open-aims/extractNSEC\", ref = \"main\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Functions for Extracting NSEC Values from Fitted Frequentist and Bayesian Model Objects","text":"Usage information extractNSEC can seen project page reference page.","code":""},{"path":"/index.html","id":"further-information","dir":"","previous_headings":"","what":"Further Information","title":"Functions for Extracting NSEC Values from Fitted Frequentist and Bayesian Model Objects","text":"extractNSEC provided Australian Institute Marine Science GPL-2 License (GPL-2).","code":""},{"path":"/reference/nsec.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"Extracts predicted NSEC value desired object class bayesnecfit bayesmanecfit.","code":""},{"path":"/reference/nsec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"","code":"nsec(   object,   sig_val = 0.01,   precision = 1000,   x_range = NA,   hormesis_def = \"control\",   xform = identity,   prob_vals = c(0.5, 0.025, 0.975),   ... )"},{"path":"/reference/nsec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"object object class bayesnecfit bayesmanecfit returned bnec. sig_val Probability value use lower quantile test significance predicted posterior values. lowest observed concentration (assumed control), estimate NEC interpolated NOEC value smooth ECx curves. precision number unique x values find NSEC - large values make NSEC estimate precise. x_range range x values consider extracting NSEC. hormesis_def character vector, taking values \"max\" \"control\". See Details. xform function apply returned estimated concentration values. prob_vals vector indicating probability values return estimated NSEC value. Defaults 0.5 (median) 0.025 0.975 (95 percent credible intervals). ... arguments pass class specific methods.","code":""},{"path":"/reference/nsec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"vector containing estimated NSEC value, including upper lower 95% credible interval bounds.","code":""},{"path":"/reference/nsec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"hormesis_def, \"max\", NSEC values calculated decline maximum estimates (.e. peak NEC); \"control\", NSEC values calculated relative control, assumed lowest observed concentration. Calls functions ecx nsec compare_fitted require level flexibility context allowing argument newdata (posterior_predict perspective) supplied manually, handled within function . argument precision controls precisely ecx nsec value estimated, argument x_range allowing estimation beyond existing range observed data (otherwise default range) can useful small number cases. also reasonable case estimating raw data value, functions simply return one treatment concentrations, making NOEC better metric case.","code":""},{"path":[]},{"path":"/reference/nsec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts the predicted NSEC value as desired from an object of class\nbayesnecfit or bayesmanecfit. — nsec","text":"","code":"# \\donttest{ library(bayesnec) #> Loading required package: brms #> Loading required package: Rcpp #> Loading 'brms' package (version 2.20.1). Useful instructions #> can be found by typing help('brms'). A more detailed introduction #> to the package is available through vignette('brms_overview'). #>  #> Attaching package: ‘brms’ #> The following object is masked from ‘package:stats’: #>  #>     ar #> Loading required package: ggplot2 #>  #> Attaching package: ‘bayesnec’ #> The following object is masked from ‘package:extractNSEC’: #>  #>     nsec  data(manec_example) nsec(manec_example) #>      Q50     Q2.5    Q97.5  #> 1.481227 0.253669 1.540347  #> attr(,\"precision\") #> [1] 1000 #> attr(,\"sig_val\") #> [1] 0.01 #> attr(,\"toxicity_estimate\") #> [1] \"nsec\" # }"},{"path":"/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates mean posterior predictions for objects fitted by\nbnec — predict","title":"Generates mean posterior predictions for objects fitted by\nbnec — predict","text":"Generates mean posterior predictions objects fitted bnec. object class bayesnecfit bayesmanecfit.","code":""},{"path":"/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates mean posterior predictions for objects fitted by\nbnec — predict","text":"","code":"# S3 method for bayesnecfit predict(object, ...)  # S3 method for bayesmanecfit predict(object, summary = TRUE, robust = FALSE, probs = c(0.025, 0.975), ...)"},{"path":"/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates mean posterior predictions for objects fitted by\nbnec — predict","text":"object object class bayesnecfit bayesmanecfit. ... Additional arguments predict.brmsfit object class bayesnecfit, posterior_predict.brmsfit object class bayesmanecfit. summary summary statistics returned instead raw values? Default TRUE. robust FALSE (default) mean used measure central tendency standard deviation measure variability. TRUE, median median absolute deviation (MAD) applied instead. used summary TRUE. probs percentiles computed quantile function. used summary TRUE.","code":""},{"path":"/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates mean posterior predictions for objects fitted by\nbnec — predict","text":"See ?brms::predict.brmsfit.","code":""},{"path":"/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates mean posterior predictions for objects fitted by\nbnec — predict","text":"","code":"if (FALSE) { library(bayesnec) # Uses default `precision` and `x_range` to generate `newdata` internally predict(manec_example) # Provide user-specified `newdata` nd_ <- data.frame(x = seq(0, 3, length.out = 200)) predict(manec_example, ecx_val = 50, newdata = nd_, make_newdata = FALSE) # Predictions for raw input data nec4param <- pull_out(manec_example, model = \"nec4param\") preds <- predict(nec4param, make_newdata = FALSE) x <- pull_brmsfit(nec4param)$data$x plot(x, preds[, 1]) }"}]
